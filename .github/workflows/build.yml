name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 4 * * *'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      xoom_version: ${{ steps.version.outputs.xoom_version }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Cache Node packages
        uses: actions/cache@v2
        with:
          path: |
            target/node
            src/main/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('src/main/frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node

      - name: Determine version
        id: version
        run: echo "::set-output name=xoom_version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package -Pfrontend -Pgithub-releases

      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: JARs
          path: target/*.jar

      - name: Notify slack
        if: always() && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) && github.repository_owner == 'vlingo'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-cd
          SLACK_USERNAME: Bob the Builder
          SLACK_ICON: 'https://vlingo.io/wp-content/uploads/cropped-vlingo-favicon-180x180.png'
          SLACK_FOOTER: '${{ github.repository }}:${{ steps.version.outputs.xoom_version }}'

      - name: Cleanup
        run: rm -rf ~/.m2/repository/io/vlingo

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Determine the version
        id: version
        run: |
          DOCKER_IMAGE=vlingo/xoom-schemata
          VERSION=snapshot
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            TAGS="${DOCKER_IMAGE}:snapshot,${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${VERSION}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=push::${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && github.repository_owner == 'vlingo' }}

      - uses: actions/download-artifact@v2
        with:
          name: JARs
          path: target/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: steps.version.outputs.push == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ steps.version.outputs.push }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.version.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.version.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Notify slack
        if: failure() && steps.version.outputs.push == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-cd
          SLACK_USERNAME: Suzi the Publisher
          SLACK_ICON: 'https://vlingo.io/wp-content/uploads/cropped-vlingo-favicon-180x180.png'
          SLACK_FOOTER: '${{ github.repository }}'
          SLACK_TITLE: 'Docker Image'
          SLACK_MESSAGE: ':rocket: ${{ steps.version.outputs.version }}'
